# Configuration file
# Configure the SmallRye Kafka connector
mp.messaging.connector.smallrye-kafka.bootstrap.servers=my-cluster-kafka-bootstrap-amq-stream.apps.weili-test.i3u8.s1.devshift.org:443
#mp.messaging.connector.smallrye-kafka.security.protocol=SSL
#mp.messaging.connector.smallrye-kafka.ssl.truststore.location=<path to a jks file>
#mp.messaging.connector.smallrye-kafka.ssl.truststore.password=<jks password>
mp.messaging.connector.smallrye-kafka.ssl.endpoint.identification.algorithm=

# Configure the Kafka sink (we write to it)
mp.messaging.outgoing.generated-price.connector=smallrye-kafka
mp.messaging.outgoing.generated-price.topic=prices
mp.messaging.outgoing.generated-price.value.serializer=org.apache.kafka.common.serialization.IntegerSerializer

# Configure the Kafka source (we read from it)
mp.messaging.incoming.prices.connector=smallrye-kafka
mp.messaging.incoming.prices.value.deserializer=org.apache.kafka.common.serialization.IntegerDeserializer


mp.messaging.outgoing.price-create.connector=smallrye-kafka
mp.messaging.outgoing.price-create.topic=prices
mp.messaging.outgoing.price-create.value.serializer=org.apache.kafka.common.serialization.IntegerSerializer

# Configure the Kafka source (we read from it)
mp.messaging.incoming.fruit-in.connector=smallrye-kafka
mp.messaging.incoming.fruit-in.topic=fruit-in
mp.messaging.incoming.fruit-in.value.deserializer=org.acm.kafka.FruitDeserializer

# Configure the Kafka sink (we write to it)
mp.messaging.outgoing.fruit-out.connector=smallrye-kafka
mp.messaging.outgoing.fruit-out.topic=fruit-out
mp.messaging.outgoing.fruit-out.value.serializer=io.quarkus.kafka.client.serialization.JsonbSerializer